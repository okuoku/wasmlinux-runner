file(STRINGS mapargs.txt args)
file(STRINGS maptbl.txt maps)
file(STRINGS syscalls.h syscalls)

foreach(l ${args})
    if("${l}" MATCHES "([^:]*):SYSCALL_DEFINE(.).([^,]*)")
        set(filename ${CMAKE_MATCH_1})
        set(count ${CMAKE_MATCH_2})
        set(sym ${CMAKE_MATCH_3})
        if(sym_${sym})
            message(STATUS "Already defined ${sym} ${sym_${sym}} vs ${filename}")
        else()
            set(sym_${sym} ${filename})
        endif()
        set(argc_${sym} ${count})
        #message(STATUS "${sym}: ${count} ${filename}")
    else()
        message(STATUS "Unrecognised line: ${l}")
    endif()
endforeach()

foreach(l ${maps})
    if("${l}" MATCHES "([^:]*):__SYSCALL.([^,]*)[, \t]*sys_([^)]*)")
        set(filename ${CMAKE_MATCH_1})
        set(nr LKL${CMAKE_MATCH_2})
        set(sys ${CMAKE_MATCH_3})
        #message(STATUS "${filename}: ${nr} => ${sys}")
    elseif("${l}" MATCHES "([^:]*):__SC_COMP_3264.([^,]*)[, \t]*sys_([^,)]*)")
        set(filename ${CMAKE_MATCH_1})
        set(nr LKL${CMAKE_MATCH_2})
        set(sys ${CMAKE_MATCH_3})
        message(STATUS "${filename}: ${nr} => ${sys}")
    elseif("${l}" MATCHES "([^:]*):__SC_COMP.([^,]*)[, \t]*sys_([^,)]*)")
        set(filename ${CMAKE_MATCH_1})
        set(nr LKL${CMAKE_MATCH_2})
        set(sys ${CMAKE_MATCH_3})
        message(STATUS "${filename}: ${nr} => ${sys}")
    else()
        message(STATUS "Unknown: ${l}")
        continue()
    endif()

    set(test ${nr}:${sys})
    if(symnr_${nr})
        if(${symnr_${nr}} STREQUAL ${test})
        else()
            message(STATUS "Already defined ${nr} ${symnr_${nr}} vs ${filename}")
        endif()
    else()
        set(symnr_${nr} ${test})
        set(symnrtosys_${nr} ${sys})
    endif()
endforeach()

set(syssyms)
foreach(l ${syscalls})
    if("${l}" MATCHES "#define ([^ ]*)")
        list(APPEND syssyms ${CMAKE_MATCH_1})
    endif()
endforeach()

list(REMOVE_DUPLICATES syssyms)

set(argcsyms)
foreach(nr ${syssyms})
    if(symnrtosys_${nr})
        list(APPEND argcsyms ${nr})
        set(nrargc_${nr} ${argc_${symnrtosys_${nr}}})
    else()
        message(STATUS "Unknown nr: ${nr}")
    endif()
endforeach()

# Static assignment J: https://zenn.dev/link/comments/c2dfc0cf1051b2
macro(static_assign nr argc)
    set(nrargc_${nr} ${argc})
    list(APPEND argcsyms ${nr})
endmacro()

static_assign(LKL__NR_io_getevents 5)
static_assign(LKL__NR3264_lseek 3)
static_assign(LKL__NR3264_fstatat 4)
static_assign(LKL__NR3264_fstat 2)
static_assign(LKL__NR_nanosleep 2)
static_assign(LKL__NR_timer_gettime 2)
static_assign(LKL__NR_timer_settime 4)
static_assign(LKL__NR_adjtimex 1)
static_assign(LKL__NR3264_mmap 6) # FIXME: It's actually mmap_pgoff
static_assign(LKL__NR_mprotect 2) # FIXME: Why??

file(WRITE "syscall_argc.h" "/* Autogenerated */\n")
foreach(s ${argcsyms})
    if(DEFINED nrargc_${s})
        file(APPEND "syscall_argc.h" "SYSCALL_ARGC(${s}, ${nrargc_${s}})\n")
    endif()
endforeach()
